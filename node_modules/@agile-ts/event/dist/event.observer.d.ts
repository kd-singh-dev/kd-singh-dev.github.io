import { Observer, RuntimeJob, ObserverKey, SubscriptionContainer } from '@agile-ts/core';
import { Event } from './internal';
export declare class EventObserver<PayloadType = any> extends Observer {
    event: () => Event<PayloadType>;
    /**
     * @internal
     * Event Observer - Handles Event dependencies and ingests Event triggers into the Runtime
     * @param event - Event
     * @param config - Config
     */
    constructor(event: Event<PayloadType>, config?: CreateEventObserverConfigInterface);
    /**
     * @internal
     * Performs Job from Runtime
     * @param job - Job that gets performed
     */
    perform(job: RuntimeJob<this>): void;
}
/**
 * @param dependents - Initial Dependents of Event Observer
 * @param subs - Initial Subscriptions of Event Observer
 * @param key - Key/Name of Event Observer
 */
export interface CreateEventObserverConfigInterface {
    dependents?: Array<Observer>;
    subs?: Array<SubscriptionContainer>;
    key?: ObserverKey;
}
