export default class API {
    config: ApiConfig;
    /**
     * @public
     * @param config - Config
     */
    constructor(config?: ApiConfig);
    /**
     * Overrides API Config and returns overwritten API Instance
     * Note: Doesn't overwrite this API Class
     * @param config - Config
     */
    with(config?: ApiConfig): API;
    /**
     * @public
     *  Get Request
     *  @param path - Url Path
     *  @param config - Config
     */
    get(path: string, config?: RequestInit): Promise<AgileResponse<any>>;
    /**
     * @public
     *  Post Request
     *  @param path - Url Path
     *  @param payload - Payload of Post Request
     *  @param config - Config
     */
    post(path: string, payload?: any, config?: RequestInit): Promise<AgileResponse<any>>;
    /**
     * @public
     *  Put Request
     *  @param path - Url Path
     *  @param payload - Payload of Put Request
     *  @param config - Config
     */
    put(path: string, payload?: any, config?: RequestInit): Promise<AgileResponse<any>>;
    /**
     * @public
     *  Patch Request
     *  @param path - Url Path
     *  @param payload - Payload of Patch Request
     *  @param config - Config
     */
    patch(path: string, payload?: any, config?: RequestInit): Promise<AgileResponse<any>>;
    /**
     * @public
     *  Delete Request
     *  @param path - Url Path
     *  @param payload - Payload of Delete Request
     *  @param config - Config
     */
    delete(path: string, payload?: any, config?: RequestInit): Promise<AgileResponse<any>>;
    /**
     * @internal
     * Handles Requests
     */
    private send;
}
/**
 * @param data - Request Body Data
 * @param timedout - If Request timed out
 * @param status - Response Status Code
 * @param raw - Raw Response
 * @param type - Response Type for instance 'application/json'
 */
export interface AgileResponse<DataType = any> {
    data: DataType;
    timedout?: boolean;
    status: number;
    raw?: Response;
    type?: string | null;
}
/**
 * @param options - Request Options
 * @param baseURL - Base Url of the Endpoint (eg 'https://api.mysite.co')
 * @param path - Path to the Endpoint (eg '/v1')
 * @param timeout - Timeout if Endpoint didn't Response
 */
export interface ApiConfig {
    options?: RequestInit;
    baseURL?: string;
    path?: string;
    timeout?: number;
}
