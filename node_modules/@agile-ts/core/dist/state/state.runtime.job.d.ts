import { RuntimeJob, RuntimeJobConfigInterface, RuntimeJobKey, StateObserver } from '../internal';
export declare class StateRuntimeJob extends RuntimeJob<StateObserver> {
    config: StateRuntimeJobConfigInterface;
    constructor(observer: StateObserver, config?: CreateStateRuntimeJobConfigInterface);
}
/**
 * @param key - Key/Name of Job
 */
export interface CreateStateRuntimeJobConfigInterface extends StateRuntimeJobConfigInterface {
    key?: RuntimeJobKey;
}
/**
 * @param overwrite - If whole State Value gets overwritten with Job Value
 * @param storage - If Job Value can be saved in Storage
 */
export interface StateRuntimeJobConfigInterface extends RuntimeJobConfigInterface {
    overwrite?: boolean;
    storage?: boolean;
}
