import { State, Collection, DefaultItem, StateKey, StateRuntimeJobConfigInterface } from '../internal';
export declare class Item<DataType extends object = DefaultItem> extends State<DataType> {
    static updateGroupSideEffectKey: string;
    isSelected: boolean;
    collection: () => Collection<DataType>;
    /**
     * @public
     * Item of Collection
     * @param collection - Collection to which the Item belongs
     * @param data - Data that the Item holds
     * @param config - Config
     */
    constructor(collection: Collection<DataType>, data: DataType, config?: ItemConfigInterface);
    /**
     * @internal
     * Updates Key/Name of State
     * @param value - New Key/Name of State
     * @param config - Config
     */
    setKey(value: StateKey | undefined, config?: StateRuntimeJobConfigInterface): this;
    /**
     * @internal
     * Adds rebuildGroupThatIncludeItemKey to the Item sideEffects
     * @param itemKey - ItemKey at which the groups has to rebuild
     */
    addRebuildGroupThatIncludeItemKeySideEffect(itemKey: StateKey): void;
}
/**
 * @param isPlaceholder - If Item is initially a Placeholder
 */
export interface ItemConfigInterface {
    isPlaceholder?: boolean;
}
