"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Item = void 0;
const internal_1 = require("../internal");
class Item extends internal_1.State {
    constructor(collection, data, config = {}) {
        super(collection.agileInstance(), data, {
            isPlaceholder: config.isPlaceholder,
            key: data[collection.config.primaryKey],
        });
        this.isSelected = false;
        this.collection = () => collection;
        this.addRebuildGroupThatIncludeItemKeySideEffect(this._key || 'unknown');
    }
    setKey(value, config = {}) {
        super.setKey(value);
        config = internal_1.defineConfig(config, {
            sideEffects: {
                enabled: true,
                exclude: [],
            },
            background: false,
            force: false,
            storage: true,
            overwrite: false,
        });
        if (!value)
            return this;
        this.removeSideEffect(Item.updateGroupSideEffectKey);
        this.addRebuildGroupThatIncludeItemKeySideEffect(value);
        this.patch({ [this.collection().config.primaryKey]: value }, {
            sideEffects: config.sideEffects,
            background: config.background,
            force: config.force,
            storage: config.storage,
            overwrite: config.overwrite,
        });
        return this;
    }
    addRebuildGroupThatIncludeItemKeySideEffect(itemKey) {
        this.addSideEffect(Item.updateGroupSideEffectKey, (instance, config) => instance.collection().rebuildGroupsThatIncludeItemKey(itemKey, config), { weight: 100 });
    }
}
exports.Item = Item;
Item.updateGroupSideEffectKey = 'rebuildGroup';
