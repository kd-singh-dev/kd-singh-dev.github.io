(self.webpackChunkagile_docs=self.webpackChunkagile_docs||[]).push([[8712],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},175:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return i},toc:function(){return p},default:function(){return c}});var a=n(2122),r=n(9756),l=(n(7294),n(3905)),o={id:"agileHOC",title:"AgileHOC",sidebar_label:"AgileHOC",slug:"/react/AgileHOC"},i={unversionedId:"packages/react/features/agileHOC",id:"packages/react/features/agileHOC",isDocsHomePage:!1,title:"AgileHOC",description:"The AgileHOC is mainly thought for Class Components,",source:"@site/docs/packages/react/features/AgileHoc.md",sourceDirName:"packages/react/features",slug:"/react/AgileHOC",permalink:"/docs/react/AgileHOC",editUrl:"https://github.com/kd-singh-dev/documentation/tree/develop/docs/packages/react/features/AgileHoc.md",version:"current",lastUpdatedAt:1624902050,formattedLastUpdatedAt:"6/28/2021",sidebar_label:"AgileHOC",frontMatter:{id:"agileHOC",title:"AgileHOC",sidebar_label:"AgileHOC",slug:"/react/AgileHOC"}},p=[{value:"\ud83c\udff7 Subscribable Instances",id:"-subscribable-instances",children:[]},{value:"\ud83d\udd34 Example",id:"-example",children:[]},{value:"\ud83d\udfe6 Typescript",id:"\ud83d\udfe6-typescript",children:[]},{value:"\ud83d\udced Props",id:"-props",children:[]},{value:"\ud83d\udcc4 Return",id:"-return",children:[]}],s={toc:p};function c(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},"\u2757\ufe0f"),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The ",(0,l.kt)("inlineCode",{parentName:"p"},"AgileHOC")," is mainly thought for ",(0,l.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/components-and-props.html"},"Class Components"),",\nas we recommend using Hooks in ",(0,l.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/components-and-props.html"},"Functional Components"),"."))),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"AgileHOC")," is a Higher Order Component that is wrapped around a React Component.\nIt takes care of binding ",(0,l.kt)("a",{parentName:"p",href:"/docs/introduction#agile-sub-instance"},"Agile Sub Instances")," (like States or Collections) to the wrapped React Component."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"export default AgileHOC(RandomComponent, [MY_COOL_STATE]);\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"output")," of the passed States will be mapped into the ",(0,l.kt)("inlineCode",{parentName:"p"},"props")," property of the Class Component.\nTherefore, each State should have a unique key to be correctly represented by the ",(0,l.kt)("inlineCode",{parentName:"p"},"props")," property.\nTo be 100% sure that each State has its own key, we recommend providing the States to the ",(0,l.kt)("inlineCode",{parentName:"p"},"AgileHOC()")," in a keymap instead of an array."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"export default AgileHOC(RandomComponent, {\n    myState: MY_STATE\n});\n")),(0,l.kt)("p",null,"However, using the direct State value is the most reliable and typesafe way."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{4,9}","{4,9}":!0},"class RandomComponent extends React.Component {\n    render() {\n        // return <h1>Hi {this.props.myCoolState}</h1>; // Not Typesafe\n        return <h1>Hi {MY_COOL_STATE.value}</h1>; // Recommended | Typesafe\n    }\n}\n\n// Wrapping AgileHOC around the React Component and binding MY_COOL_STATE to it\nexport default AgileHOC(RandomComponent, [MY_COOL_STATE]);\n")),(0,l.kt)("h3",{id:"-subscribable-instances"},"\ud83c\udff7 Subscribable Instances"),(0,l.kt)("p",null,"We are not limited to States.\nWe can bind any ",(0,l.kt)("a",{parentName:"p",href:"/docs/introduction#agile-sub-instance"},"Agile Sub Instance")," that owns\nan ",(0,l.kt)("inlineCode",{parentName:"p"},"Observer")," to React Components."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"  export default AgileHOC(RandomComponent, [MY_COOL_STATE, MY_GROUP]);\n")),(0,l.kt)("p",null,"Instances that can be bound to a React Component via the ",(0,l.kt)("inlineCode",{parentName:"p"},"useAgile()")," Hook:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/core/state"},(0,l.kt)("inlineCode",{parentName:"a"},"State"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/core/computed"},(0,l.kt)("inlineCode",{parentName:"a"},"Computed"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/core/collection"},(0,l.kt)("inlineCode",{parentName:"a"},"Collection"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/core/collection/group"},(0,l.kt)("inlineCode",{parentName:"a"},"Group"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/core/collection/selector"},(0,l.kt)("inlineCode",{parentName:"a"},"Selector"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/core/collection#-item"},(0,l.kt)("inlineCode",{parentName:"a"},"Item"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,l.kt)("h3",{id:"-example"},"\ud83d\udd34 Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},'const App = new Agile({waitForMount: false});\nconst MY_STATE = App.createState("Hello Stranger!", {key: "myFirstState"});\n\nclass RandomComponent extends React.Component {\n    render() {\n        return (\n            <div>\n                <p>Direct Value: {MY_STATE.value}</p>\n                <p>Props Value: {this.props.myFirstState}</p>\n                <button\n                    onClick={() => {\n                        MY_STATE.set("Hello Friend!");\n                    }}\n                >\n                    Update State\n                </button>\n            </div>\n        );\n    };\n}\n\nconst WrappedComponent = AgileHOC(RandomComponent, [MY_STATE]);\n\nrender(<WrappedComponent/>);\n')),(0,l.kt)("h3",{id:"\ud83d\udfe6-typescript"},"\ud83d\udfe6 Typescript"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"AgileHOC")," is nearly 100% typesafe.\nBut be aware that the ",(0,l.kt)("a",{parentName:"p",href:"/docs/introduction#agile-sub-instance"},"Agile Sub Instance")," ",(0,l.kt)("inlineCode",{parentName:"p"},"outputs")," merged into the ",(0,l.kt)("inlineCode",{parentName:"p"},"props")," property ",(0,l.kt)("strong",{parentName:"p"},"aren't typesafe"),"."),(0,l.kt)("h3",{id:"-props"},"\ud83d\udced Props"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"reactComponent")),(0,l.kt)("td",{parentName:"tr",align:null},"ComponentClass"),(0,l.kt)("td",{parentName:"tr",align:null},"Component to which the passed Agile Sub Instances will be applied"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"deps")),(0,l.kt)("td",{parentName:"tr",align:null},"DepsType"),(0,l.kt)("td",{parentName:"tr",align:null},"Agile Sub Instances that are bound to the passed Component"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"key")),(0,l.kt)("td",{parentName:"tr",align:null},"string ","|"," number"),(0,l.kt)("td",{parentName:"tr",align:null},"Key/Name of SubscriptionContainer that is created. Mainly thought for Debugging"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"agileInstance")),(0,l.kt)("td",{parentName:"tr",align:null},"Agile"),(0,l.kt)("td",{parentName:"tr",align:null},"To which Agile Instance the State belongs. Automatically detected if only one Agile Instance exists."),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("h4",{id:"depstype"},"DepsType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type DepsType =\n  | Array<SubscribableAgileInstancesType>\n  | { [key: string]: SubscribableAgileInstancesType }\n  | SubscribableAgileInstancesType;\n")),(0,l.kt)("h4",{id:"subscribableagileinstancestype"},"SubscribableAgileInstancesType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type SubscribableAgileInstancesType = State | Collection | Observer | undefined;\n")),(0,l.kt)("h3",{id:"-return"},"\ud83d\udcc4 Return"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"AgileReactComponent\n")),(0,l.kt)("p",null,"Returns a modified version of the passed React Component."))}c.isMDXComponent=!0}}]);